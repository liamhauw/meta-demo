<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CMakePresetLoader">{
  &quot;useNewFormat&quot;: true
}</component>
  <component name="CMakeReloadState">
    <option name="reloaded" value="true" />
  </component>
  <component name="CMakeRunConfigurationManager">
    <generated>
      <config projectName="luka" targetName="update_mappings" />
      <config projectName="luka" targetName="spdlog" />
      <config projectName="luka" targetName="tinyobjloader" />
      <config projectName="luka" targetName="luka_engine" />
      <config projectName="luka" targetName="json11" />
      <config projectName="luka" targetName="run_meta_parser" />
      <config projectName="luka" targetName="meta_parser" />
      <config projectName="luka" targetName="uninstall" />
      <config projectName="luka" targetName="glfw" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug-Visual Studio" ENABLED="true" CONFIG_NAME="Debug" TOOLCHAIN_NAME="Visual Studio" GENERATION_OPTIONS="-G &quot;Visual Studio 17 2022&quot;" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d9a84928-3a52-46dc-ba54-43f879fb93d4" name="Changes" comment="commit">
      <change beforePath="$PROJECT_DIR$/.clang-format" beforeDir="false" afterPath="$PROJECT_DIR$/.clang-format" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/codeStyles/codeStyleConfig.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/codeStyles/codeStyleConfig.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/engine/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/3rd_party/LLVM/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/third_party/LLVM/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/3rd_party/LLVM/bin/macOS/libc++.1.dylib" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/third_party/LLVM/bin/macOS/libc++.1.dylib" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/3rd_party/LLVM/bin/macOS/libc++abi.1.dylib" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/third_party/LLVM/bin/macOS/libc++abi.1.dylib" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/3rd_party/LLVM/bin/macOS/libclang.dylib" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/third_party/LLVM/bin/macOS/libclang.dylib" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/3rd_party/LLVM/bin/x64/libclang.dll" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/third_party/LLVM/bin/x64/libclang.dll" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/3rd_party/LLVM/include/clang-c/BuildSystem.h" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/third_party/LLVM/include/clang-c/BuildSystem.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/3rd_party/LLVM/include/clang-c/CXCompilationDatabase.h" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/third_party/LLVM/include/clang-c/CXCompilationDatabase.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/3rd_party/LLVM/include/clang-c/CXErrorCode.h" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/third_party/LLVM/include/clang-c/CXErrorCode.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/3rd_party/LLVM/include/clang-c/CXString.h" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/third_party/LLVM/include/clang-c/CXString.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/3rd_party/LLVM/include/clang-c/Documentation.h" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/third_party/LLVM/include/clang-c/Documentation.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/3rd_party/LLVM/include/clang-c/Index.h" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/third_party/LLVM/include/clang-c/Index.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/3rd_party/LLVM/include/clang-c/Platform.h" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/third_party/LLVM/include/clang-c/Platform.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/3rd_party/LLVM/include/llvm-c/lto.h" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/third_party/LLVM/include/llvm-c/lto.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/3rd_party/LLVM/lib/x64/libclang.lib" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/third_party/LLVM/lib/x64/libclang.lib" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/3rd_party/mustache/mustache.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/third_party/mustache/mustache.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/parser/common/precompiled.h" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/parser/common/precompiled.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/parser/common/schema_module.h" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/parser/common/schema_module.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/parser/cursor/cursor.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/parser/cursor/cursor.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/parser/cursor/cursor.h" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/parser/cursor/cursor.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/parser/cursor/cursor_type.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/parser/cursor/cursor_type.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/parser/cursor/cursor_type.h" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/parser/cursor/cursor_type.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/parser/generator/generator.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/parser/generator/generator.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/parser/generator/reflection_generator.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/parser/generator/reflection_generator.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/parser/generator/serializer_generator.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/parser/generator/serializer_generator.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/parser/language_types/class.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/parser/language_types/class.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/parser/language_types/class.h" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/parser/language_types/class.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/parser/language_types/field.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/parser/language_types/field.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/parser/language_types/method.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/parser/language_types/method.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/parser/language_types/type_info.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/parser/language_types/type_info.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/parser/language_types/type_info.h" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/parser/language_types/type_info.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/parser/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/parser/main.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/parser/meta/meta_info.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/parser/meta/meta_info.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/parser/meta/meta_utils.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/parser/meta/meta_utils.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/parser/meta/meta_utils.h" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/parser/meta/meta_utils.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/parser/parser/parser.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/parser/parser/parser.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/parser/parser/parser.h" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/parser/parser/parser.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/core/meta/parser/parser/template_manager/template_manager.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/engine/core/meta/parser/parser/template_manager/template_manager.cc" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug-Visual Studio" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="ROOT_SYNC" value="DONT_SYNC" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectApplicationVersion">
    <option name="ide" value="CLion" />
    <option name="majorVersion" value="2023" />
    <option name="minorVersion" value="1.4" />
  </component>
  <component name="ProjectId" id="2S8Xk8lFRS5rMCkjYCsoOS0rWco" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;cf.advertisement.text.has.clang-format&quot;: &quot;true&quot;,
    &quot;cf.advertisement.text.overridden&quot;: &quot;true&quot;,
    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Code/luka/engine/core&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;CMakeSettings&quot;,
    &quot;settings.editor.splitter.proportion&quot;: &quot;0.27522936&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Code\luka\engine\core" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Code\luka\engine\function\framework\common" />
      <recent name="C:\Code\luka\engine\core\meta" />
    </key>
  </component>
  <component name="RunManager" selected="CMake Application.meta_parser">
    <configuration default="true" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="glfw" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="luka" TARGET_NAME="glfw" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="json11" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="luka" TARGET_NAME="json11" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="luka_engine" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="luka" TARGET_NAME="luka_engine" CONFIG_NAME="Debug-Visual Studio" RUN_TARGET_PROJECT_NAME="luka" RUN_TARGET_NAME="luka_engine">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="meta_parser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="luka" TARGET_NAME="meta_parser" CONFIG_NAME="Debug-Visual Studio" RUN_TARGET_PROJECT_NAME="luka" RUN_TARGET_NAME="meta_parser">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="run_meta_parser" type="CMakeRunConfiguration" factoryName="Application" PROGRAM_PARAMS="$PROJECT_DIR$/engine/core/meta/generated/header_file.json $PROJECT_DIR$/engine/core/meta/generated/parser_header.h $PROJECT_DIR$/engine/core/meta/generated * luka 0 $PROJECT_DIR$/engine/" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="luka" TARGET_NAME="meta_parser" CONFIG_NAME="Debug-Visual Studio" RUN_TARGET_PROJECT_NAME="luka" RUN_TARGET_NAME="meta_parser">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="spdlog" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="luka" TARGET_NAME="spdlog" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="tinyobjloader" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="luka" TARGET_NAME="tinyobjloader" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="uninstall" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="luka" TARGET_NAME="uninstall" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="update_mappings" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="luka" TARGET_NAME="update_mappings" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="CMake Application.luka_engine" />
      <item itemvalue="CMake Application.run_meta_parser" />
      <item itemvalue="CMake Application.meta_parser" />
      <item itemvalue="CMake Application.glfw" />
      <item itemvalue="CMake Application.update_mappings" />
      <item itemvalue="CMake Application.uninstall" />
      <item itemvalue="CMake Application.json11" />
      <item itemvalue="CMake Application.spdlog" />
      <item itemvalue="CMake Application.tinyobjloader" />
    </list>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="d9a84928-3a52-46dc-ba54-43f879fb93d4" name="Changes" comment="" />
      <created>1688529321987</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1688529321987</updated>
      <workItem from="1688529323859" duration="19585000" />
      <workItem from="1688559060628" duration="3802000" />
      <workItem from="1688621302014" duration="335000" />
      <workItem from="1689058194692" duration="842000" />
    </task>
    <task id="LOCAL-00001" summary="commit">
      <option name="closed" value="true" />
      <created>1688538648131</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1688538648131</updated>
    </task>
    <task id="LOCAL-00002" summary="commit">
      <option name="closed" value="true" />
      <created>1688547320159</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1688547320159</updated>
    </task>
    <task id="LOCAL-00003" summary="commit">
      <option name="closed" value="true" />
      <created>1688551129176</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1688551129176</updated>
    </task>
    <task id="LOCAL-00004" summary="commit">
      <option name="closed" value="true" />
      <created>1688560339812</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1688560339812</updated>
    </task>
    <task id="LOCAL-00005" summary="commit">
      <option name="closed" value="true" />
      <created>1688560343345</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1688560343345</updated>
    </task>
    <option name="localTasksCounter" value="6" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VCPKGProject">
    <isAutomaticEditVcpkgJson value="false" />
    <isAutomaticCheckingOnLaunch value="false" />
    <isAutomaticFoundErrors value="true" />
    <isAutomaticFoundErrors value="true" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="commit" />
    <option name="LAST_COMMIT_MESSAGE" value="commit" />
  </component>
</project>